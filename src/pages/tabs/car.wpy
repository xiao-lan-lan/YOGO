<template>
  <view class="container">
    <!-- 标题 -->
    <van-cell icon="shop-o" title="购物车列表"></van-cell>

    <!-- 购物车列表 -->
    <van-swipe-cell class="good-list">
      <block wx:for="{{carGoods}}" wx:key="id">
        <van-swipe-cell right-width="{{ 65 }}">
          <!-- 商品标题 -->
          <van-card title="{{ item.title }}">
            <!-- 自定义图片区 -->
            <view slot="thumb" class="good-thumb">
              <!-- 复选框 -->
              <van-checkbox
                value="{{ item.isChecked }}"
                checked-color="#d81e06"
                @change="onCheckOne"
                data-id="{{item.id}}"
              />
              <!-- 图片 -->
              <image src="{{ item.img }}"></image>
            </view>
            <!-- 自定义底部 -->
            <view slot="bottom" class="good-bottom">
              <!-- 价格 -->
              <text>￥ {{ item.price }}</text>
              <!-- 步进器 -->
              <van-stepper
                value="{{ item.count }}"
                @change="onChangeGoodCount"
                data-id="{{item.id}}"
              ></van-stepper>
            </view>
          </van-card>
          <view slot="right" class="swipe-delete" @tap="onDeleteOne({{item.id}})">删除</view>
        </van-swipe-cell>
      </block>
    </van-swipe-cell>

    <!-- 提交订单 -->
    <van-submit-bar
      price="{{ checkedPrice }}"
      button-text="提交订单"
      bind:submit="onClickButton"
    >
      <!-- 复选框 -->
      <van-checkbox value="{{ checkAll }}" checked-color="#d81e06" @change="onCheckAll">
        全选
      </van-checkbox>
    </van-submit-bar>
  </view>
</template>

<script>
import wepy from 'wepy'

export default class extends wepy.page {
  config = {};
  components = {};

  mixins = [];

  data = {};

  computed = {
    // 购物车商品
    carGoods() {
      return this.$parent.globalData.carGoods
    },

    // 反选
    checkAll() {
      // 全部商品与选中商品数量相等，则全选选中，否则不选中
      const allCount = this.$parent.globalData.carGoods.length
      const checkedCount = this.$parent.globalData.carGoods.filter(item => item.isChecked).length
      return allCount === checkedCount
    },

    // 选中商品总价
    checkedPrice() {
      // 筛选出选中商品数组,遍历 数量*价格 返回
      let allprice = 0
      const checkedGoods = this.$parent.globalData.carGoods.filter(item => item.isChecked)
      checkedGoods.forEach(item => {
        allprice += item.price * item.count
      })
      return allprice * 100
    }

  };

  methods = {
    // 单个商品勾选状态
    onCheckOne(e) {
      this.$parent.updataGoodsStatus(e.detail, e.currentTarget.dataset.id)
    },

    // 商品数量增减
    onChangeGoodCount(e) {
      this.$parent.uodataGoodsCount(e.detail, e.currentTarget.dataset.id)
    },

    // 删除商品
    onDeleteOne(id) {
      this.$parent.deleteOneGoods(id)
    },

    // 全选
    onCheckAll(e) {
      this.$parent.checkAll(e.detail)
    }

  };

  events = {};

  onLoad() {
    console.log('load')
  }

  onShow() {
    console.log('show')
  }
}
</script>

<style lang="less">
.good-thumb {
  display: flex;
  align-items: center;
  image {
    height: 68px;
    margin-left: 16rpx;
  }
}
.good-bottom {
  display: flex;
  justify-content: space-between;
  margin-top: 10rpx;
  text {
    color: #d81e06;
    font-weight: 700;
  }
}
.van-submit-bar {
  padding: 0 8px;
}
.container {
  padding-bottom: 100rpx;
}
.swipe-delete {
  background-color: #ee0a24;
  color: #fff;
  width: 65px;
  height: 100%;
  font-size: 14px;
  display: flex;
  justify-content: center;
  align-items: center;
}
</style>
