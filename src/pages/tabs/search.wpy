<template>
  <view class="container">
    <!-- 搜索框 -->
    <van-search
      value="{{ SearchText }}"
      placeholder="请输入搜索关键词"
      show-action
      @search="onSearch"
      @change="onChange"
      @cancel="onCancel"
    >
    </van-search>

    <!-- 搜索结果 -->
    <van-cell-group wx:if="{{SearchText.length}}">
      <block wx:for="{{SearchList}}" wx:key="index">
        <van-cell
          title="{{item.goods_name}}"
          @tap="goDetail({{item.goods_id}})"
          class="search"
        ></van-cell>
      </block>
    </van-cell-group>

    <!-- 历史记录 -->
    <view class="history" wx:else>
      <van-tag type="success" wx:for="{{history}}" wx:key="index" @tap="goList({{item}})">
        {{ item }}
      </van-tag>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'

export default class Index extends wepy.page {
  config = {};
  components = {};

  mixins = [];

  data = {
    SearchText: '', // 搜索关键字
    SearchList: [], // 搜索结果列表
    timer: 0 // 定时器
  };

  computed = {
    history() {
      return this.$parent.globalData.historyList
    }
  };

  methods = {
    // 搜索关键字,跳转列表页
    onSearch(e) {
      // 非空
      if (!e.detail.trim()) {
        return
      }

      this.SearchText = e.detail.trim()

      // 调用全局addHistory,增加历史记录存到全局
      this.$parent.addHistory(this.SearchText)

      // 跳转列表页
      wepy.navigateTo({
        url: `/pages/goods_list/index?query=${this.SearchText}`
      })
    },

    // 输入时联想建议
    onChange(e) {
      // 输入变化时,先清除原来的定时器,即原来如果有延迟要执行的请求,要清掉,只执行最后一次
      clearTimeout(this.timer)

      // 非空
      if (!e.detail.trim()) {
        // 如果没有搜索词,清空上次搜索结果
        this.SearchText = ''
        this.SearchList = []
        return
      }

      this.SearchText = e.detail.trim()

      // 定时器防抖,输入有变化时,延迟500ms再请求
      this.timer = setTimeout(() => {
        this.getSuggestion()
      }, 500)
    },

    // 取消
    onCancel() {},

    // 点击搜索结果跳转详情
    goDetail(goodID) {
      wepy.navigateTo({
        url: `/pages/goods_detail/index?goods_id=${goodID}`
      })
    },

    // 点击历史记录,去列表页
    goList(val) {
      // 跳转列表页
      wepy.navigateTo({
        url: `/pages/goods_list/index?query=${val}`
      })
    }
  };

  events = {};

  onLoad() {
    console.log(this)
  }

  onHide() {
  // 页面切换,切换回来还会显示上次的搜索结果,所以页面隐藏时清空一下
    this.SearchText = ''
    this.SearchList = []
  }

  // 获取搜索结果
  async getSuggestion() {
    const { data: res } = await wepy.get('/goods/qsearch', {
      query: this.SearchText
    })

    // 请求失败
    if (res.meta.status !== 200) {
      return wepy.myToast()
    }

    // 请求成功
    this.SearchList = res.message
    this.$apply()
  }
}
</script>

<style lang="less">
.history {
  padding: 20rpx;
  .van-tag {
    margin: 0 20rpx;
  }
}
.search {
  .van-cell__title {
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
  }
}
</style>
