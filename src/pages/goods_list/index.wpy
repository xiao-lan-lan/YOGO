<template>
  <view class="container">
    <block wx:for="{{GoodsList}}" wx:key="index">
      <van-card
      num="{{item.goods_number}}"
      price="{{item.goods_price}}"
      title="{{item.goods_name}}"
      thumb="{{ item.goods_small_logo }}"
      @tap="goDetail({{item.goods_id}})"
    />
    </block>
  </view>
</template>

<script>
import wepy from 'wepy'

export default class Index extends wepy.page {
  config = {
    'navigationBarTitleText': '商品列表',
    'onReachBottomDistance': 100,
    'enablePullDownRefresh': true,
    'backgroundColor': '#ccc',
    'backgroundTextStyle': 'dark'
  };
  components = {};

  mixins = [];

  data = {
    // 商品列表参数对象
    GoodsListParams: {
      pagenum: 1, // 页码
      pagesize: 10 // 页容量
    },

    GoodsList: [], // 商品列表数据
    totalGoods: 0, // 总商品条数
    isloading: false// 下拉加载中
  };

  computed = {};

  methods = {
    // 跳转商品详情页
    goDetail(goodID) {
      wepy.navigateTo({
        url: `/pages/goods_detail/index?goods_id=${goodID}`
      })
    }
  };

  events = {};

  onLoad(val) {
    console.log(val)
    // 把跳转传过来的参数,解构到商品列表参数里
    this.GoodsListParams = { ...this.GoodsListParams, ...val }
    this.loadGoodsList()
  }

  // 请求商品列表
  async loadGoodsList(cb) {
    // 解构 data
    const { data: res } = await wepy.get('/goods/search', this.GoodsListParams)

    console.log(res)

    // 请求失败
    if (res.meta.status !== 200) {
      return wepy.myToast()
    }

    // 请求成功
    this.GoodsList = [...this.GoodsList, ...res.message.goods]
    this.totalGoods = res.message.total

    // 请求完成，结束加载状态
    this.isloading = false

    // 下拉刷新的停止刷新状态
    cb && cb()

    this.$apply()
  }

  // 触底事件
  onReachBottom() {
    // 判断请求的页码是否大于总条数对应的页码,大于则不再请求,提示用户
    if (this.GoodsListParams.pagenum >= Math.ceil(this.totalGoods / this.GoodsListParams.pagesize)) {
      return wepy.myToast('没有更多了')
    }

    // 判断是否有加载中的请求，有则不再发起
    if (this.isloading) {
      return wepy.myToast('正在加载中，请稍等')
    }

    // 触底，说明加载状态中
    this.isloading = true

    this.GoodsListParams.pagenum += 1
    this.loadGoodsList()
  }

  // 下拉刷新
  onPullDownRefresh() {
    // 页码归1,列表数组清空,重新请求第一页数据
    this.GoodsListParams.pagenum = 1
    this.GoodsList = []
    this.loadGoodsList(() => {
      wepy.stopPullDownRefresh()
    })
  }
}
</script>

<style lang="less">
.van-card {
  border-bottom: 1rpx solid #fff
}
</style>
