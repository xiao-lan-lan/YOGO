<template>
  <view class="container">
    <!-- 地址 -->

    <!-- 显示地址 -->
    <view class="address" wx:if="{{address.userName}}" @tap="onChooseAddress">
      <view class="phone">
        <text>收货人：{{ address.userName }}</text>
        <view>联系电话：{{ address.telNumber }}<van-icon name="arrow"/></view>
      </view>
      <view>
        收货地址：{{
          address.provinceName +
            address.cityName +
            address.countyName +
            address.detailInfo
        }}
      </view>
    </view>

    <!-- 选择地址 -->
    <van-button wx:else type="warning" size="large" @click="onChooseAddress">请选择收货地址</van-button>

    <!-- 分割线 -->
    <image src="/assets/icons/cart_border@2x.png" class="line"></image>

    <!-- 下单商品列表 -->
    <view>
      <block wx:for="{{checkedGoods}}" wx:key="id">
        <van-card
          num="{{item.count}}"
          price="{{item.price}}"
          title="{{item.title}}"
          thumb="{{ item.img }}"
        />
      </block>
    </view>

    <!-- 支付 -->

    <!-- 已登录 -->
    <van-submit-bar
      price="{{ allPrice }}"
      button-text="支付"
      @tap="onPay"
      wx:if="{{token}}"
    ></van-submit-bar>

    <!-- 未登录 -->
    <!-- getuserinfo事件代替click -->
    <van-button
      type="primary"
      size="large"
      style="position:fixed;bottom:0;width:100%"
      wx:else
      open-type="getUserInfo"
      @getuserinfo="onLogin"
    >
      登录后下单
    </van-button>

    <!-- 倒计时 -->
    <van-toast id="custom-selector"></van-toast>

  </view>
</template>

<script>
import wepy from 'wepy'
import Toast from '../../assets/vant/toast/toast'

export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '确认订单'
  };
  components = {};

  mixins = [];

  data = {};

  computed = {
    // 地址
    address() {
      return this.$parent.globalData.address
    },

    // 选中商品
    checkedGoods() {
      return this.$parent.globalData.carGoods.filter(item => item.isChecked)
    },

    // token
    token() {
      return this.$parent.globalData.token
    },

    // 商品总价
    allPrice() {
      const checkedGoods = this.$parent.globalData.carGoods.filter(item => item.isChecked)
      let price = 0
      checkedGoods.forEach(item => {
        price += item.count * item.price
      })
      return price * 100
    }
  };

  methods = {
    // 选择地址
    async onChooseAddress() {
      const res = await wepy.chooseAddress().catch(err => err)
      if (res.errMsg !== 'chooseAddress:ok') {
        wepy.myToast('选择地址失败')
      }
      this.$parent.setAddress(res)
    },

    // 登录
    async onLogin(e) {
      // 1.获取用户授权信息
      if (e.detail.errMsg !== 'getUserInfo:ok') {
        return wepy.myToast('获取用户授权失败')
      }
      // console.log(e.detail)

      // 2.调用接口获取登录凭证（code）
      const res = await wepy.login()
      if (res.errMsg !== 'login:ok') {
        return wepy.myToast('获取用户code失败')
      }
      // console.log(res)

      // 3.准备登录请求参数
      const loginParams = {
        encryptedData: e.detail.encryptedData,
        rawData: e.detail.rawData,
        iv: e.detail.iv,
        signature: e.detail.signature,
        code: res.code
      }

      // 4.发请求,拿token,存到全局
      // msg: "Error: invalid code, hints: [ req_id: zJLFFXyMe-z.Ckea ]"变化的
      // status: 400  说明成功,后台接口有权限,非其开发者无法访问
      const result = await wepy.post('/users/wxlogin', loginParams)
      if (result.data.meta.status === 400) {
        this.$parent.setToken(result.data.meta.msg)
      }

      // 5.异步刷新页面
      this.$apply()
    },

    // 支付
    async onPay() {
      // 非法判断
      if (!this.address.provinceName) {
        return wepy.myToast('请选择地址')
      }
      if (this.allPrice === 0) {
        return wepy.myToast('商品总价不能为0')
      }

      // 1.拿订单编号
      const orderRes = await wepy.post('my/orders/create', {
        order_price: this.allPrice / 100,
        consignee_addr: this.address.provinceName + this.address.cityName + this.address.countyName + this.address.detailInfo,
        goods: this.checkedGoods.map(item => {
          return {
            goods_id: item.id,
            goods_number: item.count,
            goods_price: item.price
          }
        })
      })

      // 2.拿支付参数
      await wepy.post('my/orders/req_unifiedorder', {
        order_number: orderRes.data.meta.status
      })

      // 3.调用小程序支付接口
      const res = await wepy.requestPayment({
        'timeStamp': '1564730510',
        'nonceStr': 'SReWbt3nEmpJo3tr',
        'package': 'prepay_id=wx02152148991420a3b39a90811023326800',
        'signType': 'MD5',
        'paySign': '3A6943C3B865FA2B2C825CDCB33C5304'
      }).catch(err => err)

      // 4.支付成功,倒计时3秒,跳转订单列表
      if (res.errMsg !== 'requestPayment:fail no permission') {
        return wepy.myToast('支付失败')
      }
      this.cutdown()
    }
  };

  // 倒计时
  cutdown() {
    const toast = Toast.loading({
      duration: 0,       // 持续展示 toast
      forbidClick: true, // 禁用背景点击
      message: '倒计时 3 秒',
      loadingType: 'spinner',
      selector: '#custom-selector'
    })

    let second = 3
    const timer = setInterval(() => {
      second--
      if (second) {
        toast.setData({
          message: `倒计时 ${second} 秒`
        })
      } else {
        clearInterval(timer)
        Toast.clear()
        wepy.navigateTo({
          url: '/pages/order/order-list'
        })
      }
    }, 1000)
  };

  events = {};

  onLoad() {}
}
</script>

<style lang="less">
.address {
  margin-top: 10rpx;
  padding: 0 20rpx;
  font-size: 24rpx;
  line-height: 60rpx;
  .phone {
    display: flex;
    justify-content: space-between;
  }
}
.line {
  width: 100%;
  height: 10rpx;
}
.van-card {
  border-bottom: 1rpx solid #eee;
}
</style>
