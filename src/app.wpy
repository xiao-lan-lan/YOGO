<script>
import wepy from 'wepy'
import 'wepy-async-function'
import './utils/baseAPI.js'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/tabs/index',
      'pages/tabs/cate',
      'pages/tabs/search',
      'pages/tabs/car',
      'pages/tabs/my',
      'pages/goods_detail/index',
      'pages/goods_list/index'
    ],
    window: {
      backgroundTextStyle: 'light',

      // 顶部标题
      navigationBarBackgroundColor: '#d81e06',
      navigationBarTitleText: '优购',
      navigationBarTextStyle: 'white'
    },

    // 底部标题
    tabBar: {
      list: [
        {
          pagePath: 'pages/tabs/index',
          text: '首页',
          iconPath: '/assets/icons/home.png',
          selectedIconPath: '/assets/icons/home-active.png'
        },
        {
          pagePath: 'pages/tabs/cate',
          text: '分类',
          iconPath: '/assets/icons/cates.png',
          selectedIconPath: '/assets/icons/cates-active.png'
        },
        {
          pagePath: 'pages/tabs/search',
          text: '搜索',
          iconPath: '/assets/icons/search.png',
          selectedIconPath: '/assets/icons/search-active.png'
        },
        {
          pagePath: 'pages/tabs/car',
          text: '购物车',
          iconPath: '/assets/icons/cart.png',
          selectedIconPath: '/assets/icons/cart-active.png'
        },
        {
          pagePath: 'pages/tabs/my',
          text: '我的',
          iconPath: '/assets/icons/my.png',
          selectedIconPath: '/assets/icons/my-active.png'
        }
      ],
      color: '#000',
      selectedColor: '#d81e06',
      borderStyle: 'black'
    },

    // 使用组件
    usingComponents: {
      // 侧边导航
      'van-sidebar': './assets/vant/sidebar/index',
      'van-sidebar-item': './assets/vant/sidebar-item/index',
      // 商品卡片
      'van-card': './assets/vant/card/index',
      // 单元格
      'van-cell': './assets/vant/cell/index',
      'van-cell-group': './assets/vant/cell-group/index',
      // 图标
      'van-icon': './assets/vant/icon/index',
      // 商品导航
      'van-goods-action': './assets/vant/goods-action/index',
      'van-goods-action-icon': './assets/vant/goods-action-icon/index',
      'van-goods-action-button': './assets/vant/goods-action-button/index',
      // 搜索
      'van-search': './assets/vant/search/index',
      // Tab 标签页
      'van-tab': './assets/vant/tab/index',
      'van-tabs': './assets/vant/tabs/index',
      // 宫格
      'van-grid': './assets/vant/grid/index',
      'van-grid-item': './assets/vant/grid-item/index'
    }
  };

  globalData = {
    address: null // 用户地址
  };

  // 设置地址
  setAddress(val) {
    // console.log(val)
    this.globalData.address = val
    // 存到本地
    wepy.setStorage({
      key: 'address',
      data: val
    })
  }

  // 获取本地地址
  async getAddress() {
    const res = await wepy.getStorage({
      key: 'address'
    }).catch(err => err)

    if (res.errMsg === 'getStorage:ok') {
      this.globalData.address = res.data
      console.log('get launch')
      // console.log(this.globalData.address)
    }
  }

  constructor() {
    super()
    this.use('requestfix')
    this.use('promisify')

    // 拦截request请求
    this.intercept('request', {
      // 发出请求时的回调函数
      config(p) {
        console.log('config request: ', p)
        wepy.showLoading({
          title: '数据加载中'
          // mask: true
        })
        // 必须返回OBJECT参数对象，否则无法发送请求到服务端
        return p
      },

      // 请求成功后的回调函数
      success(p) {
        // 可以在这里对收到的响应数据对象进行加工处理
        console.log('request success: ', p)
        // 必须返回响应数据对象，否则后续无法对响应数据进行处理
        return p
      },

      // 请求失败后的回调函数
      fail(p) {
        console.log('request fail: ', p)
        // 必须返回响应数据对象，否则后续无法对响应数据进行处理
        return p
      },

      // 请求完成时的回调函数(请求成功或失败都会被执行)
      complete(p) {
        console.log('request complete: ', p)
        wepy.hideLoading()
      }
    })
  }

  onLaunch() {
    this.getAddress()
    console.log('on langch')

    // this.globalData.address = { name: 12, age: 99 }
    // console.log('111', this.globalData.address)
  }
}
</script>
